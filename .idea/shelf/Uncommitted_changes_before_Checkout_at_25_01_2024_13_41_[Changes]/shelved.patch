Index: Test/Benchmark.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import datetime\r\nimport time\r\n\r\nfrom Algo.Negamax import Negamax\r\nfrom Algo.Position import Position\r\n\r\n\r\nclass Benchmark:\r\n    def __init__(self):\r\n        self.nbrTotTest = 0\r\n        self.nbrTestOk = 0\r\n        self.moyTmp = 0\r\n        self.tmpTot = 0\r\n        self.nodeParcMoy = 0\r\n        self.nodeParcTot = 0\r\n\r\n    def testNegamax(self):\r\n        fichtest = [\"Test_L3_R1\",\"Test_L2_R1\",\"Test_L2_R2\",\"Test_L1_R1\",\"Test_L1_R2\",\"Test_L1_R3\"]\r\n        for i in fichtest:\r\n            self.testNegamaxFich(i)\r\n\r\n\r\n    def testNegamaxFich(self, fich):\r\n        with open(f\"./result\", \"w\") as res:\r\n            res.write(f\"[{datetime.datetime.now()}]\\n\")\r\n            self.nbrTotTest = 0\r\n            self.tmpTot = 0\r\n            self.nodeParcTot = 0\r\n            self.nbrTestOk = 0\r\n            with open(f\"./TestFile/{fich}\", 'r') as fichier:\r\n                lignes = fichier.readlines()\r\n                self.nbrTotTest = len(lignes)\r\n                for x in range(self.nbrTotTest):\r\n                    ligne = lignes[x].strip().split(' ')\r\n\r\n                    scoreAtt = ligne[1]\r\n                    coup_joue = ligne[0]\r\n\r\n                    pos = Position(coup_joue)\r\n\r\n                    s = Negamax()\r\n                    start = time.time()\r\n                    weak = False\r\n                    scoreObt = s.solve(pos)\r\n                    self.tmpTot += time.time() - start\r\n\r\n                    self.nodeParcTot += s.noeuds_parcourus\r\n                    if (str(scoreObt) != scoreAtt):\r\n                        res.write(f\"[{datetime.datetime.now()}] [{fich}] Erreur Ligne {x + 1} | ScoreObt: {scoreObt} ScoreAtt: {scoreAtt}\\n\")\r\n                    else:\r\n                        if((x+1)%100 == 0):\r\n                            print(f\"Test {x + 1}: OK\")\r\n                        self.nbrTestOk += 1\r\n\r\n                self.nodeParcMoy = self.nodeParcTot / self.nbrTotTest\r\n                self.moyTmp = self.tmpTot / self.nbrTotTest\r\n\r\n\r\n                print(f\"----------\\nFichier {fich}\\nTest reussi: {self.nbrTestOk}/{self.nbrTotTest}\\nMoy Noeud Parcourus: {self.nodeParcMoy}\\nTmp Moy: {self.moyTmp}\\n----------\")\r\n                res.write(f\"----------\\n[{datetime.datetime.now()}]\\nFichier {fich}\\nTest reussi: {self.nbrTestOk}/{self.nbrTotTest}\\nMoy Noeud Parcourus: {self.nodeParcMoy}\\nTmp Moy: {self.moyTmp}\\n----------\")\r\n\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    bench = Benchmark()\r\n    bench.testNegamaxFich(\"Test_L3_R1\")\r\n
===================================================================
diff --git a/Test/Benchmark.py b/Test/Benchmark.py
--- a/Test/Benchmark.py	
+++ b/Test/Benchmark.py	
@@ -21,7 +21,7 @@
 
 
     def testNegamaxFich(self, fich):
-        with open(f"./result", "w") as res:
+        with open(f"./result_[{fich}]", "w") as res:
             res.write(f"[{datetime.datetime.now()}]\n")
             self.nbrTotTest = 0
             self.tmpTot = 0
@@ -48,7 +48,7 @@
                     if (str(scoreObt) != scoreAtt):
                         res.write(f"[{datetime.datetime.now()}] [{fich}] Erreur Ligne {x + 1} | ScoreObt: {scoreObt} ScoreAtt: {scoreAtt}\n")
                     else:
-                        if((x+1)%100 == 0):
+                        if((x+1)%10 == 0):
                             print(f"Test {x + 1}: OK")
                         self.nbrTestOk += 1
 
@@ -64,4 +64,4 @@
 
 if __name__ == "__main__":
     bench = Benchmark()
-    bench.testNegamaxFich("Test_L3_R1")
+    bench.testNegamax()
